<?php

function questions_form_top_chief(){
    $value = array(0 => 'Лотоус Виктор Викторович', 1 => 'Иванов Владимир Станиславович', 2 => 'Красуля Александр Сергеевич', 3 => 'Спатарь Дмитрий Николаевич',
                   4 => 'Кладиев Николай Анатольевич', 5=> 'Вавака Екатерина Ивановна', 6 => 'Бойченко Елена Петровна', 7 => 'Зинченко Игорь Михайлович',
                   8=> 'Арсеньев Юрий Анатольевич', 9 => 'Рудометкин Сергей Васильевич', 10 => 'Гунько Александр Владимирович');
  return $value;
}

function questions_form_send_mail(&$form_state){
  $personnel_number = $form_state['values']['user_number'];
  $query = db_select('drupal.pgok_users', 'u');
  $query->fields('u', array('TN', 'FIO'));
  $query->condition('u.TN', $personnel_number, '=');
  $result = $query->execute();

  foreach($result as $row)
    $value = $row->FIO;
  //$value = questions_form_top_chief();
  $message = ' Пришел вопрос от '.$value.',';
  $message .= ' через авторизованного пользователя: '.$form_state['values']['user'].'.';
  //$message .= ' Вопрос адресован '.$value[$form_state['values']['chief_subdivision']];
  drupal_mail('system', 'mail', 'Aleksey.Stepin@mine.ferrexpo.com', language_default(), array(
    'context' => array(
      'subject' => 'Вопрос к руководителю',
      'message' => $message,
    )
  ));
}

function questions_form_change_str(){
  global $user;
  $value = explode(',',$user->data['ldap_user']['init']['dn']);
  $value = substr($value[0], 3);
  return $value;
}

function questions_form_form($form,&$form_state){
  global $user;

    $form=array();
    $form['user'] = array(
        '#type' => 'textfield',
        '#title' => 'Ваше имя:',
        '#default_value' => questions_form_change_str(),
        '#weight' => 1,
        '#required' => true
    );
    $form['e_mail'] = array(
        '#type' => 'textfield',
        '#title' => 'Ваш e-mail:',
        '#default_value' => $user->mail,
        '#weight' => 2,
        '#required' => true
    );
    $form['chief_subdivision'] = array(
        '#type' => 'radios',
        '#title' => 'ФИО руководителя:',
        '#options' => questions_form_top_chief(),
        '#weight' => 3,
        '#required' => true
    );
    $form['question'] = array(
        '#type' => 'textarea',
        '#title' => 'Текст сообщения:',
        '#weight' => 4,
        '#required' => true
    );
    $form['user_number'] = array(
        '#type' => 'textfield',
        '#title' => 'Табельный номер:',
        '#weight' => 5,
        '#required' => true
    );
    if (!empty($form_state['values']['user_number'])) {
      $form['user_personnel_number'] = array(
        '#type' => 'textfield',
        '#title' => 'Ф.И.О. по табельному номеру',
        '#weight' => 6,
        '#default_value' => questions_form_query_db($form,$form_state)
      );
    }
    $form['user_name_with_number'] = array(
      '#type' => 'submit',
      '#value' => 'Проверить табельный номер',
      '#validate' => array('questions_form_rebuild'),
      '#weight' => 7,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Отправить'),
      '#weight' => 8,
  );
    $form['clear'] = array(
      '#type' => 'submit',
      '#value' => 'Очистить форму',
      '#validate' => array('questions_form_form_clear'),
      '#weight' => 9,
    );

    return $form;
}

function questions_form_form_clear($form,&$form_state) {

  $value = array(NULL,'user','e_mail','chief_subdivision','question','user_number','user_personnel_number');
  if (isset($form_state['values'])) {
    for ($i = 1; $i <= 6; $i++) {
      unset($form_state['values'][$value[$i]]);// Принудительно очищаем возможные
    }
    unset($form_state['storage']);//Значение в памяти
  }
  drupal_set_message('*** Форма отчищена ***');
  $form_state['input'] = NULL;
  $form_state['rebuild'] = TRUE;


  /*---------- For test ----------*/
  //dpm('form_clear');
  //dpm($form_state);
}

function questions_form_query_db($form,&$form_state){
  if (!empty($form_state['values']['user_number'])) {

    $personnel_number = $form_state['values']['user_number'];
    $query = db_select('drupal.pgok_users', 'u');
    $query->fields('u', array('TN', 'FIO'));
    $query->condition('u.TN', $personnel_number, '=');
    $result = $query->execute();

    foreach($result as $row)
      $value = $row->FIO;

    if (empty($value)){
      $value = 'Табельный номер ( '.$form_state['values']['user_number'].' ) НЕ  СУЩЕСТВУЕТ!';
    }
  }
  return $value;
}

function questions_form_rebuild($form,&$form_state) {
  $form_state['rebuild'] = TRUE;
}

function questions_form_form_validate($form, &$form_state) {

  if (!is_numeric($form_state['values']['user_number'])) {
    form_set_error('user_number', ' ВНИМАНИЕ! Табельный номер может содержать только цифры ');
  }

  $personnel_number = $form_state['values']['user_number'];
  $query = db_select('pgok_users', 'tn_query');
  $query->fields('tn_query', array('TN', 'FIO'));
  $query->condition('tn_query.TN', $personnel_number, '=');
  $result = $query->execute();

  foreach($result as $row)
    $value = $row->FIO;

  if (!isset($value)) {
    form_set_error('user_number', t('*** Табельный номер ( '.$form_state['values']['user_number'].' ) НЕ  СУЩЕСТВУЕТ! Пожалуйста введите правильный табельный номер ***'));
  }
}

function questions_form_form_submit($form, &$form_state) {

  drupal_set_message(t('Вопрос успешно отправлен. Ожидайте, пожалуйста, ответа на ваш e-mail.'));
  questions_form_send_mail($form_state);

  /*----- Test print -----*/
  dpm('form_submit');
  dpm($form_state);

}

/**
 * Implements hook_menu().
 */

function questions_form_menu(){
    $items = array();

    $items['questions-form'] = array(
      'title' => 'Форма для заполнения вопроса',
      'type' => MENU_CALLBACK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('questions_form_form'),
      //'menu_name' => 'menu-question-to-the-manager',
      'access callback' => TRUE,
    );
    return $items;
}


